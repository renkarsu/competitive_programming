{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	/*
	"":{
		"prefix": "",
		"body": [
			""
		],
		"description": ""
	},
	*/
	
	"REP":{
		"prefix": "R",
		"body":[
			"for(int i = 0, i_len = ($1); i < i_len; ++i){$0",
			"}"
		],
		"description": "REP(i, n) macro"
	},

	"RREP":{
		"prefix": "RR",
		"body": [
			"for(int i = ((int)($1) - 1); i > = 0; --i){$0",
			"}"
		],
		"description": "RREP(i, n) macro"
	},

	"FOR":{
		"prefix": "F",
		"body": [
			"for(int i = (int)($1); i < (int)($2); ++i){$0",
			"}"
		],
		"description": "FOR(i, m, n) macro"
	},

	"ALL":{
		"prefix": "A",
		"body": [
			"(($1).begin(), ($1).end())"
		],
		"description": "ALL(x) macro"
	},

	"SZ":{
		"prefix": "S",
		"body": [
			"((int)($1).size())$0"
		],
		"description": "SZ(x)"
	},	

	"EB":{
		"prefix": "e",
		"body": [
			"emplace_back($1)$0"
		],
		"description": "EB macro"
	},	

	"MP":{
		"prefix": "m",
		"body": [
			"make_pair($1)$0"
		],
		"description": ""
	},

    "cin_vector_int":{
        "prefix": "cvi",
        "body":[
            "vector<int> $1($2);",
            "for(int i = 0, i_len = $2; i < i_len; ++i) cin >> $1[i];",
            "$0"
        ],
        "description": "vi cin"
	},

	"vector_int":{
		"prefix": "vi",
		"body": [
			"vector<int> $0;"
		],
		"description": "vi"
	},

	"vec_vec_int":{
		"prefix": "vvi",
		"body": [
			"vector<vector<int>> $0;"
		],
		"description": "vvi"
	},

	"vs":{
		"prefix": "vs",
		"body": [
			"vector<string> $0"
		],
		"description": "vs"
	},
/*
	"":{
		"prefix": "",
		"body": [
			""
		],
		"description": ""
	},	
	*/
}
